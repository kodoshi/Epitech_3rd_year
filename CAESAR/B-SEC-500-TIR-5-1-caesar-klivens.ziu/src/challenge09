#!/usr/bin/python3
import base64
import re
import sys
from Crypto.Cipher import AES


def throw(msg, name=sys.argv[0]):
    print('%s:' % name, msg, file=sys.stderr)
    sys.exit(84)


def main(args):
    if len(args) != 2:
        throw('Invalid arguments')
    try:
        with open(args[1], 'r') as f:
            key = bytes.fromhex(re.sub(r'\s', '', f.readline()))
            iv = bytes.fromhex(re.sub(r'\s', '', f.readline()))
            data = base64.b64decode(f.read())
            if len(key) == 0 or len(data) == 0:
                raise ValueError()
    except IOError as e:
        throw('Cannot read file: %s' % e.strerror, name=args[1])
    except ValueError:
        throw('Invalid file context', name=args[1])

    padding = 16 - (len(data) % 16)
    data += bytes(padding for i in range(padding))
    blocks = [data[i:i+16] for i in range(0, len(data), 16)]
    try:
        aes = AES.new(key, AES.MODE_ECB)
        clear = b''.join(bytes(b ^ v for b, v in zip(aes.decrypt(block), iv))
                         for block, iv in zip(blocks, [iv] + blocks))
    except ValueError:
        throw('invalid key or ciphertext')

    print(base64.b64encode(clear[:-clear[-1]]).decode())


if __name__ == '__main__':
    main(sys.argv)
